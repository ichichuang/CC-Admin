name: Vercel 部署

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  NODE_VERSION: '22.x'
  PNPM_VERSION: '10.12.4'

jobs:
  # 部署到 Vercel
  deploy:
    name: 部署到 Vercel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 获取 pnpm store 目录
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 设置 pnpm 缓存
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 运行代码检查
        run: pnpm check

      - name: 构建项目
        run: pnpm build

      - name: 验证构建输出
        run: |
          if [ ! -d "apps/admin/dist" ]; then
            echo "❌ 错误: 构建输出目录不存在"
            exit 1
          fi
          echo "✅ 构建输出验证通过"
          ls -la apps/admin/dist/

      - name: 部署到 Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'
