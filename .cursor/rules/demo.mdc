# cc-admin Vue3 组件 Demo 规范

## 📋 基本原则

- **简洁明了**: Demo 代码尽可能简洁，聚焦展示一个功能点
- **即用性**: 用户可以直接复制代码到项目中使用
- **完整性**: 包含必要的 import 语句和类型定义
- **可读性**: 代码结构清晰，注释适度
- **响应式**: 展示响应式设计和移动端适配
- **主题兼容**: 支持深色/浅色主题切换

## 📁 文件组织

### 目录结构

```
src/components/UserCard/
├── index.vue              # 组件主文件
├── types.ts               # 组件类型定义
├── demo/                  # 演示目录
│   ├── basic.vue          # 基础用法
│   ├── advanced.vue       # 高级用法
│   ├── custom-theme.vue   # 主题定制
│   ├── responsive.vue     # 响应式演示
│   └── with-loading.vue   # 加载状态
└── README.md              # 组件文档
```

### 文件命名规范

- **基础Demo**: `basic.vue` - 最简单的用法示例
- **功能Demo**: `kebab-case.vue` - 如 `custom-filter.vue`、`batch-operation.vue`
- **状态Demo**: `with-{state}.vue` - 如 `with-loading.vue`、`with-error.vue`
- **主题Demo**: `{theme}-theme.vue` - 如 `dark-theme.vue`、`custom-theme.vue`
- **响应式Demo**: `responsive.vue` - 响应式布局演示

## 🧩 Vue3 Demo 编写规范

## 在线演示

- [基础用法](./demo/basic.vue)
- [高级功能](./demo/advanced.vue)
- [响应式布局](./demo/responsive.vue)
- [主题定制](./demo/custom-theme.vue)
- [无障碍访问](./demo/accessibility.vue)
- [性能优化](./demo/performance.vue)

## API 文档

### Props

| 属性    | 类型    | 默认值 | 说明         |
| ------- | ------- | ------ | ------------ |
| user    | User    | -      | 用户信息对象 |
| loading | boolean | false  | 加载状态     |
| compact | boolean | false  | 紧凑模式     |

### Events

| 事件          | 参数                                 | 说明         |
| ------------- | ------------------------------------ | ------------ |
| user-click    | (user: User)                         | 用户点击事件 |
| status-change | (userId: string, status: UserStatus) | 状态变更事件 |

### Slots

| 插槽    | 参数 | 说明           |
| ------- | ---- | -------------- |
| header  | user | 自定义头部内容 |
| actions | user | 自定义操作按钮 |
| footer  | user | 自定义底部内容 |

```

遵循这些Demo规范，确保CC-Admin项目的组件演示代码质量高、功能完整、易于理解和使用。


- 确保代码运行正常，无控制台错误
- 适配常见浏览器
- 避免过时 API，及时更新到新推荐用法
```
